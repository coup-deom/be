name: deom backend test

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run Tests

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper

      - name: Create application-test.yml
        run: |
          cat > src/main/resources/application-test.yml << EOL
          spring:
            datasource:
              url: jdbc:postgresql://localhost:5432/test_db
              username: postgres
              password: postgres
            jpa:
              hibernate:
                ddl-auto: create-drop
              properties:
                hibernate:
                  dialect: org.hibernate.dialect.PostgreSQLDialect
            data:
              redis:
                url: redis:6379
                username: default
                password: 
                timeout: 6000
                lettuce:
                  pool:
                    max-active: 10
                    max-idle: 5
                    min-idle: 0
                    max-wait: 1000
          
            security:
              oauth2:
                client:
                  registration:
                    google:
                      client-id: test-client-id
                      client-secret: test-client-secret
                      scope:
                        - email
                        - profile
                    kakao:
                      client-id: test-client-id
                      client-secret: test-client-secret
                      redirect-uri: http://localhost:8080/login/oauth2/code/kakao
                      client-name: Kakao
                      authorization-grant-type: authorization_code
                      client-authentication-method: client_secret_post
                      scope:
                        - profile_nickname
                        - account_email
                    naver:
                      client-id: test-client-id
                      client-secret: test-client-secret
                      redirect-uri: http://localhost:8080/login/oauth2/code/naver
                      client-name: Naver
                      authorization-grant-type: authorization_code
                      scope:
                        - name
                        - email
                  provider:
                    kakao:
                      authorization-uri: https://kauth.kakao.com/oauth/authorize
                      token-uri: https://kauth.kakao.com/oauth/token
                      user-info-uri: https://kapi.kakao.com/v2/user/me
                      user-name-attribute: id
                    naver:
                      authorization-uri: https://nid.naver.com/oauth2.0/authorize
                      token-uri: https://nid.naver.com/oauth2.0/token
                      user-info-uri: https://openapi.naver.com/v1/nid/me
                      user-name-attribute: response

          jwt:
            secret: testsecretkeytestsecretkeytestsecretkeytestsecretkey
            access-expiration: 1800000
            refresh-expiration: 1209600000
          EOL

      - name: Test with Gradle
        run: ./gradlew test
        env:
          SPRING_PROFILES_ACTIVE: test


      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: build/reports/tests/
